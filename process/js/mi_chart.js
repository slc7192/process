// // 将信息存入缓存 方便页面调用
// var str =  JSON.stringify(data)
// localStorage.setItem('userInfo', str);
// // 提取用户信息
// var infoStr = localStorage.getItem('userInfo');
// var info = JSON.parse(infoStr);

 // 增加实验次数  点击链接设备 执行函数
 function AddTest() {
  $.ajax({
    type: "GET",
    url: 'http://teashop.yanxukj.com/ljcj/statistics/add?i=2',
    data: {},
    contentType: "application/json",
    
    success: function (res) {
      //alert(JSON.stringify(r));
      console.log(res)
      console.log('增加实验次数')
    },
    error: function (request) {
      console.log(JSON.stringify(request));
    }
  })
}



var local = {
  text: "end"
};

// 接受vr 参数 
// { "theTargetTemperature",false},                //温度目标值℃
// { "temperatureBuzzer",false},                   //温度警报值℃
// { "pressureTarget",false },                      //压力上限值kg
// { "pressureAlarm",false},                       //高压警报值kg
// { "loadSpeed",false},                           //加载速度r/min
// { "unloadSpeed",false}                          //卸载速度r/min

function theTargetTemperature(a){
  var theTargetTemperature_str =  JSON.stringify(a)
  localStorage.setItem('theTargetTemperature', theTargetTemperature_str);
}
function temperatureBuzzer(a){
  var temperatureBuzzer_str =  JSON.stringify(a)
  localStorage.setItem('temperatureBuzzer', temperatureBuzzer_str);
}
function pressureTarget(a){
  var pressureTarget_str =  JSON.stringify(a)
  localStorage.setItem('pressureTarget', pressureTarget_str);
}
function pressureAlarm(a){
  var pressureAlarm_str =  JSON.stringify(a)
  localStorage.setItem('pressureAlarm', pressureAlarm_str);
}
function loadSpeed(a){
  var loadSpeed_str =  JSON.stringify(a)
  localStorage.setItem('loadSpeed', loadSpeed_str);
}
function unloadSpeed(a){
  var unloadSpeed_str =  JSON.stringify(a)
  localStorage.setItem('unloadSpeed', unloadSpeed_str);
}

// theTargetTemperature(1)

// { "theTargetTemperature",false},                //温度目标值℃
// { "temperatureBuzzer",false},                   //温度警报值℃
// { "pressureTarget",false },                      //压力上限值kg
// { "pressureAlarm",false},                       //高压警报值kg
// { "loadSpeed",false},                           //加载速度r/min
// { "unloadSpeed",false}                          //卸载速度r/min

// unity执行缓存函数 告知实验设备是否连接 是否开始
function setInfo(b) {
  // 已经连接设备
  if (b == 1) {
    // console.log("连接设备");
    localStorage.setItem("start", "start");
  }
  // 开始实验
  if (b == 2) {
    // console.log("开始实验");
    var myDate = new Date(); //获取系统当前时间
    var now = [
      myDate.getFullYear(),
      myDate.getMonth() + 1,
      myDate.getDate(),
      myDate.getHours(),
      myDate.getMinutes(),
      myDate.getSeconds()
    ].join("/");
    localStorage.setItem("startTime", now);
    // console.log("now", now);
  }
  // 结束实验 清空开始的字段缓存 在清空的时候图表停止渲染
  if (b == 3) {
    // console.log("结束实验");
    localStorage.removeItem("start");
    localStorage.removeItem("startTime");
  }
}

// 连接设备
// 定义标志变量 在点击开始 暂停 重启 结束 按钮时 判断是否已经连接设备
// 连接设备之后 判断是否设备是否已经连接（由unity在exe.js执行缓存函数）
//             如果缓存中存在数据 说明设备已经连接  更改标志变量的值flag  更改图标
//             否则 更改图标 更改表中变量flag
var flag = 0;
$(".connect_eq").on("click", function() {
//   console.log("点击连接设备");
  if (localStorage.getItem("start")) {
    flag = 1;
    if (flag == 1) {
      flag = 1;
    }
    $(".chart_pic").attr("src", "./img/green.jpg");
    // 增加实验次数
    AddTest()
  } else {
    flag = 0;
    $(".chart_pic").attr("src", "./img/red.jpg");
  }
});

// 点击开始
// 每一次点击开始都会清空dom避免图表重叠
// 渲染图表
// 同时设置结束字段 点击结束按钮使用判断结束字段是否存在控制图表的渲染  图表停止渲染
$(".start_chart").on("click", function() {
//   console.log("点击开始");
 if (flag == 1) {
    echarts.init(document.getElementById("down")).dispose();
    echarts.init(document.getElementById("loading")).dispose();
    echarts.init(document.getElementById("temperature")).dispose();
    echarts.init(document.getElementById("gas")).dispose();
    echarts.init(document.getElementById("liquid")).dispose();

    fun("down", downx, downy);
    fun("liquid", lyx, lyy);
    fun("gas", mx, my);
    fun("loading", loadx, loady);
    fun("temperature", temx, temy);

    localStorage.setItem("startend", "end");
  } else {
    alert("请连接设备");
  }
});
// 点击 结束
// 移除结束字段 图表在渲染时候 判断该字段的有无确定图表数据的动态渲染
// 结束之后将 设备连接的图表更改为 为连接状态
$(".finsh_chart").on("click", function() {
//   console.log("点击结束");
  if (flag == 1) {
    localStorage.removeItem("startend");
    $(".chart_pic").attr("src", "./img/black.jpg");
  } else {
    alert("请先连接设备");
  }
});

// 点击 暂停 设置标志变量 在渲染函数的时候依据fg标志变量的存在 渲染图表
// fg 初始为1 渲染图表 点击暂停之后更改为0 图表停止渲染
var fg = 1;
$(".pause_chart").on("click", function() {
  if (flag == 1) {
    fg = 0;
  } else {
    alert("请先连接设备");
  }
});

// 点击重启  将fg更改为1 图表继续渲染
$(".reload_chart").on("click", function() {
  if (flag == 1) {
    fg = 1;
  } else {
    alert("请先连接设备");
  }
});

function fun(eve, x, y) {
  var initx = x;
  var inity = y;

  var myChart = echarts.init(document.getElementById(eve));
  var option = {
    xAxis: {
      type: "category",
      data: []
    },
    yAxis: {
      type: "value",
      min: -1
    },
    series: [
      {
        data: [],
        type: "line",
        smooth: true
      }
    ]
  };
  var id = 0;

  // 由fg标志变量判断是否进行渲染数据
  // 不断请求缓存查看（结束字段）和设备开始时间  判断是否停止图表渲染
  var time = setInterval(function() {
    // 定时增加数据
    var infoStr = localStorage.getItem("startend");
    var infoStrstart = localStorage.getItem("start");
    if (fg) {
      if (infoStr && infoStrstart) {
        option.xAxis.data.push(initx[id]);
        option.series[0].data.push(inity[id]);
        id = id + 1;
        if (id > 7) {
          option.xAxis.data.shift();
          option.series[0].data.shift();
        }
        if (id == x.length) {
          clearInterval(time);
        }
        myChart.setOption(option);
      } else {
        // console.log("结束实验");
        clearInterval(time);
        $(".chart_pic").attr("src", "./img/black.jpg");
      }
    } else {
    //   console.log("暂停实验");
    }
  }, 1000);
}

// fun('down',downx,downy)

// 获取缓存中的数据信息
var chart_selected_local_infoStr, chart_select_str, chart_init_data;

// 判断缓存是否存在 因为数据从缓存中取得
if (!localStorage.getItem("selectedInfo")) {
} else {
  // 从缓存中获取数据 渲染页面
  chart_selected_local_infoStr = localStorage.getItem("selectedInfo");
  chart_select_str = JSON.parse(chart_selected_local_infoStr);
  chart_init_data = chart_select_str;
//   console.log(chart_select_str);
}

// y轴的随机函数 在动态表格的时候可以出现不同的数据
function RoundNum(arr){
  for(var h = 0;h<arr.length;h++){
    arr[h] = Math.round((arr[h]*(1 + Math.random()/10))*100)/100
  }
  return arr
}

//结束时间为当天的日期
function getDate(datestr){
  var temp = datestr.split("-");
  var date = new Date(temp[0],temp[1],temp[2]);
  return date;
  }
  
 //温度   日期+时间
 function getDateArray(startDate, endDate, space,spnum) {
  if (!endDate) {
      endDate = new Date();
  }
  if (!startDate) {
      startDate = new Date(new Date().getTime() - 1 * 60 * 60 * spnum);
  }
  if (!space) {
      space = 60 * 60 * 1000;
  } else {
      space = space * 60 * 1000;
  }
  var endTime = endDate.getTime();
  var startTime = startDate.getTime();
  var mod = endTime - startTime;
  if (mod <= space) {
      // alert("时间太短");
      return;
  }
  var dateArray = [];
  while (mod >= space) {
      var d = new Date();
      d.setTime(startTime + space);
      dateArray.push(d);
      mod = mod - space;
      startTime = startTime + space;
  }
  var end = endDate.getTime();
  var start = startDate.getTime();
  // console.log(start);
  dateArray.unshift(new Date(start)); // 插入开头时间
  // 正序
  return dateArray.sort(function (a, b) {
      return Date.parse(a) - Date.parse(b);
  });
};
// 时间格式化
function timeFormat(dt) {
  return (
      spliceZero(dt.getFullYear()) + '-' + spliceZero(dt.getMonth() + 1) + '-' + spliceZero(dt.getDate()) 
      + " " + spliceZero(dt.getHours()) + ":" + spliceZero(dt.getMinutes()) + ":" + spliceZero(dt.getSeconds())
  );
}
// 时间格式化、1位数时，前面拼接0
function spliceZero(i) {
    if (i.toString().length == 1) {
        i = "0" + i;
    }
    return i;
}

if (chart_select_str.testNumber== 1) {
  var today=new Date(); //当天日期
  var end =today.format("yyyy-MM-dd");//转化标准日期格式为普通日期格式
  today.setDate(today.getDate()-48); //结束日期向前推48天
  var m=today.getMonth()+1;
  var start=today.getFullYear()+'-'+m+'-'+today.getDate();
  var startTime = getDate(start);
  var endTime = getDate(end);
   //沉降量**********************************
   var downx=[];
   // 液体**********************
   var lyx =[];
   // 加载力
   var mx =[];
   while((endTime.getTime()-startTime.getTime())>=0){
     var year = startTime.getFullYear();
     var month = startTime.getMonth().toString().length==1?"0"+startTime.getMonth().toString():startTime.getMonth();
     var day = startTime.getDate().toString().length==1?"0"+startTime.getDate():startTime.getDate();
     var time=year+"-"+month+"-"+day
     downx.push(time);
     lyx.push(time);
     mx.push(time);
     startTime.setDate(startTime.getDate()+1);
   }
   // 温度************************
   var temx=[];
   // 加载力******************
   var loadx =[];
   var a,b,c='';
   var spnum=1184000;
   var result=getDateArray(a,b,c,spnum);//运行函数，获取时间
   for (var i = result.length - 1; i >= 0; i--) {
     var textnode = timeFormat(result[i]);
     temx.unshift(textnode);
     loadx.unshift(textnode);
   }

  var downy = [
    0,
    -0.449,
    -0.467,
    -0.329,
    -0.373,
    -0.575,
    -0.573,
    -0.693,
    -0.679,
    -0.706,
    -0.753,
    -0.823,
    -0.84,
    -0.855,
    -0.844,
    -0.859,
    -0.872,
    -0.943,
    -0.966,
    -0.919,
    -0.885,
    -0.971,
    -0.908,
    -0.895,
    -0.95,
    -0.899,
    -0.849,
    -0.908,
    -0.851,
    -0.84,
    -0.956,
    -0.942,
    -0.884,
    -0.847,
    -0.888,
    -0.954,
    -0.939,
    -0.953,
    -0.967,
    -0.866,
    -0.757,
    -0.814,
    -0.753,
    -0.8,
    -0.805,
    -0.732,
    -0.718,
    -0.704,
    -0.637,
    -0.675,
    -0.705,
    -0.741,
    -0.76
  ];

  downy =  RoundNum(downy)

  var temy = [
    26,
    27,
    27,
    27,
    26,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    22,
    24,
    25,
    26,
    27,
    28,
    27,
    27,
    26,
    25,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    21,
    22,
    24,
    26,
    28,
    28,
    28,
    28,
    28,
    27,
    26,
    26,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    23,
    25,
    27,
    27,
    28,
    29,
    32,
    32,
    30,
    28,
    27,
    26,
    25,
    24,
    24,
    23,
    23,
    23,
    23,
    23,
    23,
    23,
    23,
    24,
    25,
    26,
    27,
    28,
    27,
    27,
    28,
    28,
    28,
    27,
    26,
    25,
    25,
    24,
    24,
    24,
    23,
    23,
    23,
    23,
    22,
    23,
    23,
    23,
    22,
    21,
    22,
    22,
    23,
    23,
    24,
    24,
    24,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    24,
    25,
    25,
    28,
    29,
    33,
    30,
    29,
    27,
    25,
    24,
    24,
    24,
    23,
    23,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    22,
    23,
    23,
    23,
    25,
    27,
    25,
    25,
    26,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    25,
    27,
    27,
    29,
    28,
    27,
    25,
    24,
    24,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    23,
    25,
    27,
    28,
    28,
    34,
    29,
    27,
    27,
    25,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    22,
    22,
    23,
    25,
    27,
    29,
    31,
    30,
    35,
    31,
    27,
    25,
    24,
    24,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    22,
    24,
    26,
    28,
    30,
    31,
    31,
    35,
    32,
    30,
    28,
    27,
    25,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    26,
    23,
    24,
    25,
    25,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    26,
    26,
    28,
    28,
    28,
    27,
    26,
    24,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    21,
    22,
    23,
    25,
    26,
    26,
    28,
    28,
    27,
    26,
    26,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    20,
    20,
    21,
    22,
    22,
    22,
    24,
    24,
    26,
    26,
    27,
    27,
    27,
    26,
    25,
    24,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    23,
    26,
    28,
    29,
    30,
    32,
    35,
    31,
    30,
    29,
    27,
    26,
    25,
    25,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    23,
    25,
    26,
    27,
    28,
    28,
    31,
    33,
    30,
    29,
    28,
    25,
    25,
    24,
    23,
    23,
    23,
    23,
    22,
    22,
    22,
    21,
    22,
    22,
    23,
    24,
    24,
    25,
    27,
    28,
    28,
    29,
    28,
    26,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    25,
    27,
    28,
    29,
    28,
    29,
    29,
    28,
    26,
    25,
    24,
    22,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    22,
    24,
    24,
    26,
    28,
    30,
    28,
    29,
    28,
    28,
    27,
    25,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    22,
    23,
    25,
    26,
    26,
    21,
    21,
    22,
    23,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    19,
    19,
    19,
    19,
    19,
    20,
    23,
    25,
    26,
    27,
    27,
    26,
    24,
    24,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    21,
    21,
    21,
    22,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    21,
    22,
    23,
    24,
    26,
    27,
    29,
    29,
    27,
    25,
    23,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    31,
    28,
    27,
    24,
    23,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    21,
    22,
    22,
    23,
    23,
    24,
    26,
    29,
    28,
    27,
    26,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    25,
    26,
    26,
    27,
    27,
    26,
    25,
    25,
    24,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    22,
    24,
    25,
    26,
    28,
    27,
    25,
    25,
    25,
    24,
    24,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    22,
    22,
    24,
    27,
    25,
    24,
    23,
    23,
    23,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    23,
    24,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    25,
    25,
    26,
    26,
    25,
    25,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    22,
    23,
    24,
    24,
    25,
    23,
    22,
    22,
    22,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    21,
    23,
    24,
    24,
    27,
    29,
    25,
    23,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    21,
    20,
    20,
    21,
    22,
    23,
    23,
    23,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    23,
    26,
    27,
    23,
    22,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    19,
    20,
    20,
    20,
    19,
    19,
    20,
    20,
    21,
    22,
    24,
    27,
    25,
    30,
    32,
    28,
    26,
    25,
    24,
    23,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    22,
    23,
    26,
    24,
    24,
    24,
    24,
    24,
    23,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    22,
    22,
    23,
    24,
    24,
    26,
    25,
    24,
    23,
    23,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    21,
    23,
    23,
    25,
    26,
    25,
    29,
    29,
    27,
    25,
    24,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    22,
    23,
    24,
    26,
    27,
    26,
    25,
    24,
    24,
    23,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    21,
    22,
    22,
    22,
    22,
    22,
    24,
    24,
    27,
    30,
    27,
    30,
    28,
    27,
    25,
    24,
    23,
    23,
    23,
    22,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    21,
    22,
    23,
    24,
    26,
    30,
    30,
    29,
    24,
    23,
    23,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    24,
    25,
    26,
    27,
    26,
    25,
    25,
    24,
    23,
    22,
    21,
    21,
    21,
    21,
    20,
    20,
    21,
    20,
    20,
    20,
    20,
    20,
    22,
    25,
    25,
    26,
    27,
    25,
    24,
    25,
    24,
    24,
    23,
    22,
    21,
    21,
    21,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    21,
    22,
    23,
    25,
    27,
    27,
    30,
    29,
    29,
    28,
    26,
    25,
    24,
    24,
    23,
    23,
    23,
    22,
    22,
    22,
    22,
    22,
    21,
    21,
    23,
    23,
    25,
    26,
    25,
    30,
    29,
    30,
    27,
    25,
    24,
    23,
    23,
    22,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    20,
    21,
    22,
    23,
    24,
    26,
    26,
    28,
    29,
    30,
    29,
    28,
    27,
    26,
    25,
    25,
    24,
    24,
    23,
    23,
    22,
    21,
    21,
    21,
    20,
    21,
    21,
    22,
    23,
    24,
    25,
    23,
    25,
    28,
    26,
    25,
    24,
    24,
    23,
    22,
    22,
    22,
    21,
    21,
    21,
    21,
    21,
    21,
    20,
    21,
    21,
    22,
    23,
    23,
    24,
    26,
    27,
    28,
    27,
    26,
    25,
    24,
    23,
    23,
    22
  ];
  temy =  RoundNum(temy)
  // 加载力
  var loady = [
    116,
    116,
    116,
    116,
    116,
    115,
    115,
    115,
    114,
    114,
    114,
    114,
    114,
    114,
    113,
    113,
    113,
    113,
    113,
    114,
    114,
    114,
    114,
    115,
    115,
    115,
    115,
    115,
    115,
    115,
    114,
    114,
    113,
    113,
    113,
    113,
    113,
    113,
    113,
    113,
    113,
    112,
    112,
    113,
    113,
    113,
    114,
    114,
    114,
    115,
    115,
    115,
    115,
    114,
    114,
    113,
    113,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    113,
    113,
    113,
    114,
    114,
    114,
    114,
    114,
    114,
    113,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    111,
    112,
    111,
    111,
    111,
    112,
    112,
    112,
    112,
    112,
    113,
    113,
    113,
    113,
    113,
    113,
    112,
    112,
    112,
    112,
    112,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    112,
    112,
    112,
    112,
    112,
    112,
    112,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    110,
    110,
    110,
    110,
    110,
    110,
    111,
    111,
    112,
    112,
    112,
    112,
    113,
    113,
    113,
    113,
    112,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    110,
    110,
    110,
    110,
    110,
    110,
    111,
    110,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    111,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    111,
    111,
    111,
    112,
    112,
    112,
    111,
    111,
    110,
    110,
    110,
    110,
    110,
    109,
    109,
    110,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    111,
    111,
    111,
    111,
    112,
    111,
    111,
    111,
    110,
    110,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    111,
    111,
    111,
    111,
    111,
    110,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    110,
    110,
    110,
    111,
    111,
    111,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    110,
    109,
    109,
    109,
    109,
    109,
    108,
    108,
    109,
    109,
    109,
    108,
    108,
    109,
    109,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    110,
    110,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    109,
    109,
    109,
    110,
    110,
    110,
    111,
    111,
    111,
    111,
    110,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    109,
    109,
    109,
    110,
    110,
    110,
    110,
    110,
    110,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    109,
    109,
    110,
    110,
    110,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    107,
    108,
    108,
    108,
    108,
    109,
    109,
    109,
    110,
    110,
    110,
    111,
    110,
    109,
    109,
    108,
    108,
    108,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    108,
    108,
    108,
    109,
    109,
    109,
    110,
    110,
    110,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    107,
    107,
    107,
    107,
    107,
    107,
    108,
    108,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    108,
    108,
    108,
    109,
    109,
    109,
    109,
    109,
    109,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    108,
    108,
    108,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    107,
    113,
    110,
    146,
    121,
    117,
    149,
    191,
    174,
    204,
    199,
    224,
    241,
    253,
    231,
    221,
    210,
    240,
    250,
    268,
    252,
    242,
    242,
    253,
    266,
    244,
    196,
    200,
    264,
    266,
    266,
    297,
    313,
    282,
    279,
    254,
    272,
    277,
    277,
    280,
    294,
    275,
    272,
    265,
    248,
    231,
    208,
    201,
    163,
    169,
    122,
    170,
    144,
    159,
    160,
    178,
    185,
    208,
    221,
    181,
    195,
    179,
    198,
    170,
    147,
    137,
    161,
    196,
    326,
    448,
    601,
    522,
    567,
    412,
    530,
    283,
    308,
    277,
    587,
    562,
    322,
    318,
    411,
    482,
    530,
    533,
    302,
    366,
    264,
    299,
    495,
    528,
    526,
    360,
    615,
    384,
    381,
    650,
    284,
    479,
    625,
    570,
    601,
    543,
    565,
    456,
    495,
    545,
    500,
    488,
    397,
    380,
    359,
    367,
    380,
    363,
    469,
    479,
    247,
    334,
    334,
    397,
    297,
    317,
    266,
    301,
    159,
    448,
    291,
    377,
    460,
    375,
    382,
    389,
    473,
    416,
    381,
    352,
    363,
    312,
    385,
    415,
    306,
    375,
    457,
    326,
    286,
    409,
    300,
    372,
    443,
    369,
    359,
    400,
    351,
    377,
    465,
    423,
    416,
    360,
    498,
    342,
    257,
    248,
    336,
    381,
    320,
    317,
    381,
    274,
    317,
    356,
    404,
    233,
    318,
    327,
    407,
    401,
    337,
    224,
    260,
    186,
    243,
    325,
    346,
    304,
    302,
    302,
    346,
    388,
    216,
    347,
    249,
    251,
    212,
    249,
    279,
    201,
    283,
    195,
    194,
    333,
    307,
    186,
    240,
    234,
    223,
    311,
    255,
    107,
    132,
    152,
    106,
    107,
    285,
    106,
    126,
    178,
    169,
    232,
    106,
    106,
    106,
    119,
    106,
    106,
    107,
    148,
    227,
    290,
    223,
    110,
    174,
    232,
    107,
    107,
    225,
    350,
    120,
    206,
    125,
    106,
    190,
    226,
    110,
    106,
    107,
    266,
    292,
    107,
    106,
    108,
    293,
    149,
    106,
    107,
    107,
    107,
    108,
    107,
    106,
    106,
    106,
    109,
    106,
    106,
    106,
    106,
    106,
    106,
    106,
    106,
    125,
    107,
    106,
    106,
    107,
    138,
    108,
    107,
    107,
    107,
    116,
    251,
    155,
    139,
    106,
    207,
    149,
    106,
    114,
    106,
    106,
    106,
    106,
    106,
    106,
    106,
    107,
    107,
    107,
    107,
    108,
    108,
    108,
    130,
    107,
    107,
    120,
    106,
    109,
    106,
    106,
    106,
    106,
    111,
    106,
    106,
    109,
    110,
    114,
    283,
    348,
    119,
    107,
    111,
    107,
    108,
    254,
    179,
    328,
    310,
    304,
    526,
    338,
    428,
    325,
    294,
    227,
    166,
    324,
    264,
    319,
    308,
    491,
    247,
    246,
    160,
    257,
    236,
    282,
    350,
    284,
    295,
    206,
    106,
    106,
    248,
    192,
    174,
    144,
    109,
    238,
    174,
    266,
    258,
    290,
    264,
    293,
    202,
    192,
    134,
    278,
    150,
    486,
    336,
    131,
    186,
    198,
    345,
    356,
    354,
    189,
    308,
    226,
    180,
    142,
    276,
    371,
    326,
    415,
    283,
    347,
    549,
    499,
    539,
    559,
    396,
    413,
    471,
    461,
    771,
    653,
    589,
    771,
    835,
    605,
    695,
    632,
    947,
    786,
    742,
    623,
    579,
    678,
    759,
    676,
    547,
    492,
    510,
    593,
    583,
    702,
    508,
    815,
    771,
    720,
    866,
    785,
    826,
    468,
    628,
    492,
    680,
    630,
    781,
    907,
    914,
    758,
    481,
    612,
    542,
    627,
    742,
    542,
    464,
    590,
    667,
    743,
    605,
    595,
    528,
    571,
    581,
    613,
    776,
    738,
    562,
    596,
    398,
    403,
    431,
    389,
    566,
    650,
    535,
    933,
    496,
    670,
    800,
    467,
    626,
    716,
    561,
    598,
    609,
    642,
    506,
    550,
    596,
    824,
    805,
    758,
    601,
    612,
    587,
    579,
    456,
    596,
    585,
    542,
    588,
    585,
    580,
    534,
    563,
    600,
    502,
    493,
    615,
    531,
    584,
    586,
    593,
    571,
    651,
    581,
    573,
    568,
    605,
    568,
    560,
    578,
    652,
    503,
    595,
    616,
    663,
    637,
    610,
    656,
    692,
    664,
    702,
    637,
    700,
    747,
    736,
    637,
    717,
    740,
    752,
    762,
    682,
    842,
    627,
    690,
    486,
    580,
    608,
    554,
    654,
    637,
    769,
    600,
    644,
    866,
    770,
    886,
    816,
    651,
    562,
    743,
    788,
    764,
    827,
    590,
    923,
    869,
    853,
    848,
    672,
    589,
    797,
    688,
    561,
    675,
    698,
    661,
    829,
    522,
    812,
    811,
    748,
    814,
    817,
    821,
    849,
    626,
    616,
    630,
    654,
    706,
    824,
    810,
    759,
    834,
    869,
    646,
    665,
    661,
    649,
    631,
    740,
    657,
    621,
    510,
    569,
    624,
    660,
    572,
    600,
    609,
    656,
    604,
    833,
    852,
    729,
    755,
    790,
    696,
    627,
    555,
    493,
    124,
    624,
    773,
    620,
    467,
    734,
    649,
    659,
    871,
    676,
    856,
    746,
    882,
    774,
    556,
    624,
    647,
    780,
    822,
    876,
    826,
    714,
    499,
    530,
    448,
    442,
    427,
    520,
    430,
    430,
    998,
    882,
    846,
    848,
    744,
    1159,
    1073,
    1038,
    902,
    907,
    723,
    749,
    715,
    617,
    802,
    832,
    827,
    833,
    788,
    698,
    511,
    435,
    439,
    715,
    844,
    737,
    657,
    686,
    824,
    690,
    621,
    589,
    603,
    568,
    581,
    570
  ];
  loady =  RoundNum(loady)
  
  var lyy = [
    15,
    13,
    18,
    20,
    16,
    15,
    18,
    19,
    22,
    24,
    26,
    23,
    25,
    20,
    23,
    26,
    26,
    26,
    24,
    21,
    23,
    25,
    18,
    16,
    20,
    25,
    28,
    24,
    25,
    21,
    19,
    21,
    19,
    20,
    22,
    24,
    21,
    20,
    18,
    24,
    28,
    23,
    25,
    22,
    20,
    21,
    18,
    18,
    17,
    14,
    15,
    15,
    14
  ];
  lyy =  RoundNum(lyy)

  var my = [
    2,
    4,
    8,
    5,
    2,
    5,
    3,
    5,
    1,
    5,
    2,
    6,
    14,
    11,
    12,
    15,
    16,
    4,
    15,
    11,
    15,
    16,
    17,
    19,
    21,
    22,
    12,
    16,
    14,
    15,
    16,
    18,
    25,
    12,
    14,
    12,
    10,
    10,
    8,
    7,
    6,
    5,
    4,
    6,
    7,
    6,
    8,
    7,
    6,
    5,
    4,
    4,
    3
  ];
  my =  RoundNum(my)
 }else if (chart_select_str.testNumber == 2) {
  var today=new Date(); //当天日期
  var end =today.format("yyyy-MM-dd");//转化标准日期格式为普通日期格式
  today.setDate(today.getDate()-48); //结束日期向前推48天
  var m=today.getMonth()+1;
  var start=today.getFullYear()+'-'+m+'-'+today.getDate();
  var startTime = getDate(start);
  var endTime = getDate(end);
  //沉降量**********************************
  var downx=[];
  // 液体**********************
  var lyx =[];
  // 加载力
  var mx =[];
  while((endTime.getTime()-startTime.getTime())>=0){
    var year = startTime.getFullYear();
    var month = startTime.getMonth().toString().length==1?"0"+startTime.getMonth().toString():startTime.getMonth();
    var day = startTime.getDate().toString().length==1?"0"+startTime.getDate():startTime.getDate();
    var time=year+"-"+month+"-"+day
    downx.push(time);
    lyx.push(time);
    mx.push(time);
    startTime.setDate(startTime.getDate()+1);
  }

  // 温度************************
  var temx=[];
  // 加载力******************
  var loadx =[];
  var a,b,c='';
  var spnum=1184000;
  var result=getDateArray(a,b,c,spnum);//运行函数，获取时间
  for (var i = result.length - 1; i >= 0; i--) {
    var textnode = timeFormat(result[i]);
    temx.unshift(textnode);
    loadx.unshift(textnode);
  }
 
  var downy = [
    0.1109,
    -0.0758,
    0.1465,
    1.0593,
    1.4352,
    1.3923,
    1.0648,
    0.9822,
    1.4764,
    1.8045,
    1.8342,
    1.1993,
    -0.3154,
    3.0854,
    7.6222,
    7.784,
    5.1921,
    3.9514,
    3.0207,
    1.2248,
    1.6331,
    0.6299,
    1.5233,
    5.7802,
    6.9021,
    5.2892,
    3.6792,
    5.3156,
    5.5139,
    3.6897,
    3.2318,
    3.5196,
    4.2615,
    4.4626,
    3.9622,
    3.3496,
    3.1937,
    1.8301,
    1.5323,
    2.3988,
    2.4233,
    4.2931,
    6.1004,
    7.1107,
    7.998,
    8.4806,
    7.5392,
    6.0963,
    7.4298,
    7.2189,
    7.2987,
    7.2647,
    7.2822
  ];
  downy =  RoundNum(downy)
  
  var temy = [
    22.844,
    22.816,
    22.789,
    22.799,
    22.79,
    22.747,
    22.836,
    22.875,
    22.813,
    22.785,
    22.846,
    22.82,
    22.86,
    22.87,
    22.791,
    22.863,
    22.785,
    22.784,
    22.837,
    22.835,
    22.791,
    22.808,
    22.848,
    22.79,
    22.862,
    22.849,
    22.802,
    22.865,
    22.786,
    22.842,
    22.814,
    22.846,
    22.772,
    22.798,
    22.823,
    22.858,
    22.795,
    22.839,
    22.856,
    22.79,
    22.828,
    22.794,
    22.849,
    22.774,
    22.76,
    22.859,
    22.867,
    22.766,
    22.8,
    22.871,
    22.791,
    22.782,
    22.787,
    22.829,
    22.884,
    22.807,
    22.758,
    22.851,
    22.792,
    22.845,
    22.785,
    22.843,
    22.857,
    22.882,
    22.837,
    22.851,
    22.879,
    22.753,
    22.855,
    22.867,
    22.871,
    22.756,
    22.772,
    22.849,
    22.841,
    22.864,
    22.883,
    22.842,
    22.788,
    22.8,
    22.775,
    22.766,
    22.849,
    22.836,
    22.83,
    22.786,
    22.88,
    22.777,
    22.774,
    22.843,
    22.79,
    22.759,
    22.763,
    22.837,
    22.76,
    22.811,
    22.88,
    22.752,
    22.808,
    22.867,
    22.764,
    22.871,
    22.872,
    22.772,
    22.853,
    22.842,
    22.772,
    22.783,
    22.774,
    22.821,
    22.826,
    22.819,
    22.793,
    22.871,
    22.859,
    22.783,
    22.828,
    22.856,
    22.787,
    22.842,
    22.793,
    22.843,
    22.877,
    22.848,
    22.769,
    22.782,
    22.77,
    22.849,
    22.869,
    22.766,
    22.86,
    22.851,
    22.947,
    22.781,
    22.857,
    22.858,
    22.766,
    22.778,
    22.81,
    22.768,
    22.794,
    22.806,
    22.843,
    22.881,
    22.933,
    22.841,
    22.774,
    22.854,
    22.854,
    22.755,
    22.855,
    22.889,
    22.879,
    22.795,
    22.784,
    22.85,
    22.834,
    22.843,
    22.861,
    22.839,
    22.772,
    22.884,
    22.831,
    22.814,
    22.782,
    22.854,
    22.804,
    22.795,
    22.844,
    22.791,
    22.797,
    22.848,
    22.946,
    22.796,
    22.881,
    22.861,
    22.781,
    22.807,
    22.795,
    22.807,
    22.863,
    22.859,
    22.925,
    22.796,
    22.873,
    22.837,
    22.875,
    22.883,
    22.756,
    22.838,
    22.875,
    22.844,
    22.788,
    22.837,
    22.784,
    22.791,
    22.864,
    22.786,
    22.765,
    22.852,
    22.824,
    22.84,
    22.795,
    22.801,
    22.832,
    22.858,
    22.785,
    22.821,
    22.924,
    22.778,
    22.769,
    22.867,
    22.78,
    22.86,
    22.848,
    22.766,
    22.787,
    22.821,
    22.861,
    22.771,
    22.844,
    22.774,
    22.842,
    22.809,
    22.823,
    22.783,
    22.826,
    22.848,
    22.775,
    22.875,
    22.841,
    22.824,
    22.789,
    22.773,
    22.744,
    22.854,
    22.835,
    22.819,
    22.77,
    22.789,
    22.811,
    22.939,
    22.792,
    22.842,
    22.767,
    22.869,
    22.824,
    22.835,
    22.849,
    22.772,
    22.836,
    22.775,
    22.858,
    22.748,
    22.796,
    22.857,
    22.852,
    22.801,
    22.795,
    22.848,
    22.762,
    22.854,
    22.835,
    22.763,
    22.77,
    22.803,
    22.814,
    22.858,
    22.941,
    22.774,
    22.782,
    22.845,
    22.754,
    22.777,
    22.856,
    22.845,
    22.856,
    22.787,
    22.851,
    22.852,
    22.84,
    22.872,
    22.854,
    22.846,
    22.856,
    22.864,
    22.855,
    22.856,
    22.862,
    22.755,
    22.791,
    22.809,
    22.829,
    22.795,
    22.858,
    22.852,
    22.833,
    22.852,
    22.856,
    22.787,
    22.867,
    22.847,
    22.82,
    22.85,
    22.85,
    22.768,
    22.776,
    22.794,
    22.817,
    22.836,
    22.765,
    22.827,
    22.824,
    22.858,
    22.831,
    22.748,
    22.845,
    22.791,
    22.761,
    22.86,
    22.786,
    22.748,
    22.762,
    22.856,
    22.753,
    22.816,
    22.775,
    22.758,
    22.823,
    22.849,
    22.858,
    22.76,
    22.846,
    22.767,
    22.824,
    22.825,
    22.865,
    22.833,
    22.844,
    22.839,
    22.847,
    22.846,
    22.842,
    22.85,
    22.805,
    22.943,
    22.877,
    22.853,
    22.775,
    22.853,
    22.788,
    22.821,
    22.85,
    22.77,
    22.839,
    22.835,
    22.873,
    22.831,
    22.854,
    22.849,
    22.776,
    22.845,
    22.853,
    22.828,
    22.765,
    22.785,
    22.764,
    22.805,
    22.868,
    22.863,
    22.84,
    22.844,
    22.771,
    22.829,
    22.841,
    22.784,
    22.825,
    22.789,
    22.956,
    22.821,
    22.824,
    22.852,
    22.846,
    22.769,
    22.766,
    22.867,
    22.752,
    22.847,
    22.77,
    22.764,
    22.84,
    22.943,
    22.842,
    22.74,
    22.766,
    22.789,
    22.754,
    22.741,
    22.873,
    22.823,
    22.749,
    22.867,
    22.755,
    22.825,
    22.864,
    22.803,
    22.85,
    22.782,
    22.841,
    22.766,
    22.853,
    22.871,
    22.761,
    22.84,
    22.764,
    22.833,
    22.776,
    22.768,
    22.731,
    22.841,
    22.849,
    22.856,
    22.771,
    22.813,
    22.763,
    22.797,
    22.79,
    22.836,
    22.849,
    22.825,
    22.846,
    22.834,
    22.744,
    22.762,
    22.774,
    22.832,
    22.813,
    22.936,
    22.847,
    22.749,
    22.793,
    22.861,
    22.85,
    22.772,
    22.863,
    22.827,
    22.834,
    22.863,
    22.85,
    22.761,
    22.853,
    22.868,
    22.911,
    22.777,
    22.86,
    22.776,
    22.742,
    22.737,
    22.85,
    22.789,
    22.835,
    22.792,
    22.864,
    22.771,
    22.791,
    22.859,
    22.834,
    22.739,
    22.759,
    22.752,
    22.776,
    22.847,
    22.789,
    22.857,
    22.773,
    22.782,
    22.834,
    22.827,
    22.85,
    22.844,
    22.759,
    22.789,
    22.848,
    22.748,
    22.829,
    22.848,
    22.767,
    22.847,
    22.766,
    22.844,
    22.769,
    22.861,
    22.756,
    22.756,
    22.852,
    22.752,
    22.82,
    22.85,
    22.837,
    22.763,
    22.762,
    22.804,
    22.825,
    22.821,
    22.76,
    22.757,
    22.777,
    22.926,
    22.873,
    22.852,
    22.857,
    22.852,
    22.839,
    22.838,
    22.789,
    22.84,
    22.824,
    22.848,
    22.725,
    22.842,
    22.837,
    22.822,
    22.846,
    22.862,
    22.795,
    22.826,
    22.754,
    22.849,
    22.822,
    22.826,
    22.784,
    22.776,
    22.821,
    22.842,
    22.759,
    22.833,
    22.805,
    22.803,
    22.822,
    22.793,
    22.81,
    22.83,
    22.853,
    22.755,
    22.799,
    22.795,
    22.841,
    22.812,
    22.86,
    22.763,
    22.808,
    22.855,
    22.821,
    22.803,
    22.833,
    22.768,
    22.724,
    22.864,
    22.785,
    22.823,
    22.761,
    22.84,
    22.827,
    22.767,
    22.86,
    22.748,
    22.78,
    22.848,
    22.838,
    22.821,
    22.855,
    22.927,
    22.841,
    22.875,
    22.82,
    22.823,
    22.781,
    22.845,
    22.83,
    22.825,
    22.869,
    22.778,
    22.795,
    22.88,
    22.875,
    22.833,
    22.856,
    22.862,
    22.893,
    22.816,
    22.858,
    22.746,
    22.761,
    22.785,
    22.846,
    22.757,
    22.784,
    22.776,
    22.841,
    22.855,
    22.832,
    22.776,
    22.777,
    22.947,
    22.828,
    22.836,
    22.838,
    22.844,
    22.776,
    22.924,
    22.743,
    22.826,
    22.804,
    22.824,
    22.754,
    22.775,
    22.828,
    22.727,
    22.747,
    22.805,
    22.836,
    22.849,
    22.802,
    22.808,
    22.772,
    22.792,
    22.808,
    22.915,
    22.87,
    22.85,
    22.759,
    22.856,
    22.844,
    22.834,
    22.771,
    22.809,
    22.75,
    22.794,
    22.852,
    22.832,
    22.845,
    22.784,
    22.846,
    22.837,
    22.778,
    22.755,
    22.852,
    22.769,
    22.86,
    22.747,
    22.917,
    22.8,
    22.767,
    22.782,
    22.862,
    22.756,
    22.769,
    22.797,
    22.807,
    22.814,
    22.835,
    22.88,
    22.768,
    22.831,
    22.934,
    22.824,
    22.838,
    22.827,
    22.75,
    22.801,
    22.932,
    22.836,
    22.847,
    22.872,
    22.8,
    22.744,
    22.778,
    22.795,
    22.844,
    22.842,
    22.847,
    22.771,
    22.758,
    22.787,
    22.818,
    22.758,
    22.863,
    22.872,
    22.734,
    22.83,
    22.797,
    22.834,
    22.812,
    22.852,
    22.777,
    22.825,
    22.821,
    22.766,
    22.852,
    22.796,
    22.871,
    22.818,
    22.757,
    22.772,
    22.828,
    22.81,
    22.817,
    22.827,
    22.835,
    22.8,
    22.824,
    22.741,
    22.846,
    22.859,
    22.776,
    22.836,
    22.8,
    22.829,
    22.823,
    22.867,
    22.919,
    22.833,
    22.854,
    22.758,
    22.774,
    22.838,
    22.858,
    22.932,
    22.843,
    22.858,
    22.829,
    22.852,
    22.965,
    22.772,
    22.822,
    22.782,
    22.754,
    22.825,
    22.766,
    22.854,
    22.818,
    22.863,
    22.866,
    22.838,
    22.824,
    22.798,
    22.834,
    22.849,
    22.848,
    22.79,
    22.822,
    22.868,
    22.785,
    22.85,
    22.785,
    23.057,
    22.836,
    22.931,
    22.794,
    22.771,
    22.838,
    22.77,
    22.834,
    22.77,
    22.928,
    22.878,
    22.833,
    22.767,
    22.784,
    22.953,
    22.775,
    22.85,
    22.851,
    22.845,
    22.787,
    22.832,
    22.765,
    22.868,
    22.742,
    22.838,
    22.84,
    22.855,
    22.864,
    22.801,
    22.814,
    22.827,
    22.8,
    22.858,
    22.768,
    22.844,
    22.845,
    22.836,
    22.782,
    22.852,
    22.772,
    22.848,
    22.785,
    22.861,
    22.836,
    22.797,
    22.777,
    22.771,
    22.787,
    22.799,
    22.776,
    22.764,
    22.875,
    22.793,
    22.85,
    22.84,
    22.783,
    22.774,
    22.847,
    22.836,
    22.761,
    22.859,
    22.878,
    22.853,
    22.844,
    22.782,
    22.876,
    22.749,
    22.808,
    22.868,
    22.843,
    22.851,
    22.81,
    22.78,
    22.792,
    22.791,
    22.757,
    22.768,
    22.901,
    22.875,
    22.755,
    22.855,
    22.804,
    22.823,
    22.769,
    22.841,
    22.825,
    22.86,
    22.882,
    22.833,
    22.791,
    22.855,
    22.799,
    22.837,
    22.836,
    22.961,
    22.838,
    22.755,
    22.771,
    22.868,
    22.859,
    22.875,
    22.857,
    22.837,
    22.875,
    22.774,
    22.839,
    22.882,
    22.88,
    22.86,
    22.848,
    22.774,
    22.861,
    22.793,
    22.807,
    22.83,
    22.848,
    22.795,
    22.834,
    22.778,
    22.941,
    22.843,
    22.758,
    22.763,
    22.875,
    22.83,
    22.773,
    22.838,
    22.823,
    22.84,
    22.787,
    22.945,
    22.796,
    22.835,
    22.796,
    22.842,
    22.756,
    22.791,
    22.843,
    22.889,
    22.913,
    22.782,
    22.815,
    22.768,
    22.856,
    22.791,
    22.851,
    22.755,
    22.965,
    22.873,
    22.793,
    22.789,
    22.885,
    22.83,
    22.873,
    22.844,
    22.754,
    22.861,
    22.846,
    22.852,
    22.859,
    22.759,
    22.841,
    22.857,
    22.828,
    22.815,
    22.773,
    22.854,
    22.854,
    23.391,
    22.864,
    22.796,
    22.852,
    22.782,
    22.86,
    22.745,
    22.766,
    22.871,
    22.855,
    22.85,
    23.007,
    22.874,
    22.83,
    22.914,
    22.802,
    22.788,
    22.845,
    22.855,
    22.856,
    22.787,
    22.841,
    22.774,
    22.792,
    22.853,
    22.879,
    22.926,
    22.839,
    22.848,
    22.824,
    22.873,
    22.856,
    22.847,
    22.766,
    22.87,
    22.855,
    22.849,
    22.863,
    22.852,
    22.766,
    22.851,
    22.767,
    22.843,
    22.782,
    22.834,
    22.762,
    22.849,
    22.851,
    22.77,
    22.851,
    22.852,
    22.852,
    22.784,
    22.871,
    22.813,
    22.837,
    22.853,
    22.842,
    22.851,
    22.801,
    22.89,
    22.838,
    22.808,
    22.865,
    22.769,
    22.857,
    22.883,
    22.837,
    22.86,
    22.786,
    22.793,
    22.985,
    22.891,
    22.847,
    22.863,
    22.876,
    22.792,
    22.855,
    22.787,
    22.853,
    22.807,
    22.86,
    22.789,
    22.794,
    22.779,
    22.864,
    22.784,
    22.885,
    22.902,
    22.788,
    22.862,
    22.825,
    22.879,
    22.782,
    22.81,
    22.851,
    22.88,
    22.876,
    22.89,
    22.879,
    22.799,
    22.863,
    22.864,
    22.782,
    22.896,
    22.871,
    22.863,
    22.81,
    22.864,
    22.885,
    22.871,
    22.914,
    22.845,
    22.849,
    22.798,
    22.871,
    22.848,
    22.887,
    22.867,
    22.839,
    22.879,
    22.881,
    22.875,
    22.878,
    22.898,
    22.856,
    22.893,
    22.852,
    22.862,
    23.006,
    22.887,
    22.863,
    22.907,
    22.803,
    22.861,
    22.893,
    22.899,
    22.781,
    22.807,
    22.888,
    22.797,
    22.961,
    22.878,
    22.783,
    22.836,
    22.816,
    22.882,
    22.895,
    22.805,
    22.823,
    22.886,
    22.877,
    22.91,
    22.841,
    22.789,
    22.815,
    22.879,
    22.862,
    22.879,
    22.873,
    22.806,
    22.777,
    22.863,
    22.881,
    22.869,
    22.951,
    22.879,
    22.846,
    22.808,
    22.883,
    22.867,
    22.855,
    22.877,
    22.799,
    22.851,
    22.858,
    22.868,
    22.791,
    22.855,
    22.823,
    22.781,
    22.804,
    22.867,
    22.846,
    22.87,
    22.783,
    22.792,
    22.867,
    22.871,
    22.802,
    22.815,
    22.807,
    22.879,
    22.773,
    22.87,
    22.887,
    22.794,
    22.788,
    22.951,
    22.786,
    22.81,
    22.894,
    22.882,
    22.875,
    22.879,
    22.93,
    22.775,
    22.813,
    22.893,
    22.857,
    22.874,
    22.837,
    22.871,
    22.807,
    22.915,
    22.867,
    22.88,
    22.891,
    22.808,
    22.889,
    22.893,
    22.843,
    22.765,
    22.857,
    22.889,
    22.844,
    22.814,
    22.816,
    22.87,
    22.795,
    22.814,
    22.787,
    22.79,
    22.87,
    22.875,
    22.844,
    22.959,
    22.89,
    22.758,
    22.893,
    22.878,
    22.861,
    22.816,
    22.875,
    22.848,
    22.849,
    22.86,
    22.757,
    22.861,
    22.876,
    22.79,
    22.796,
    22.869,
    22.898,
    22.873,
    22.929,
    22.867,
    22.866,
    22.775,
    22.865,
    22.875,
    22.816,
    22.85
  ];
  
  temy =  RoundNum(temy)

  // 加载力
  var loady = [
    6579,
    6584,
    16171,
    6594,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    6579.1,
    6584.1,
    16171.1,
    6594.1,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    44.1,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    44.1,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    46.1,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    45,
    45,
    45,
    45,
    45,
    45,
    46,
    46,
    46,
    45,
    45,
    45,
    45,
    45,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44,
    44
  ];
  loady =  RoundNum(loady)
  // 液体
  
  var lyy = [
    0.4,
    2,
    0.4,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0.4,
    0,
    0,
    0,
    0,
    7.2,
    11.6,
    0,
    6.8,
    0,
    14.2,
    20.8,
    21.6,
    9.6,
    0.2,
    0.6,
    3.8,
    0.6,
    10.8,
    0.6,
    0,
    23.2,
    0,
    0,
    0,
    0,
    0,
    1.2,
    6.6,
    0.4,
    0,
    14.8,
    5.6,
    0.4,
    3,
    0,
    0,
    0,
    0
  ];
  lyy =  RoundNum(lyy)
  // 废气量
  var my = [
    2,
    4.5,
    6,
    5.5,
    2,
    5,
    3.2,
    5,
    1.8,
    3.4,
    2.5,
    4.1,
    5,
    3.8,
    4.7,
    5.8,
    3,
    1,
    1.9,
    2.2,
    2.7,
    3.1,
    4,
    4.5,
    3.6,
    2,
    2,
    1.6,
    1.4,
    1.5,
    1.6,
    1.8,
    2,
    1.2,
    1.4,
    1.2,
    1.5,
    1,
    0.88,
    0.7,
    0.6,
    0.5,
    0.4,
    0.6,
    0.7,
    0.6,
    0.8,
    0.7,
    0.6,
    0.5,
    0.4,
    0.4,
    0.3
  ];
  my =  RoundNum(my)
}

